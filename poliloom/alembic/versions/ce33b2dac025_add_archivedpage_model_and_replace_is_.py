"""Add ArchivedPage model and replace is_extracted with archived_page_id

Revision ID: ce33b2dac025
Revises: bfa5c54dad24
Create Date: 2025-07-16 18:17:45.064696

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ce33b2dac025"
down_revision: Union[str, None] = "bfa5c54dad24"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "archived_pages",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("file_path", sa.String(), nullable=False),
        sa.Column("content_hash", sa.String(), nullable=False),
        sa.Column("fetch_timestamp", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_archived_pages_content_hash"),
        "archived_pages",
        ["content_hash"],
        unique=False,
    )
    op.add_column("born_at", sa.Column("archived_page_id", sa.UUID(), nullable=True))
    op.create_foreign_key(
        None, "born_at", "archived_pages", ["archived_page_id"], ["id"]
    )
    op.drop_column("born_at", "is_extracted")
    op.add_column(
        "holds_position", sa.Column("archived_page_id", sa.UUID(), nullable=True)
    )
    op.create_foreign_key(
        None, "holds_position", "archived_pages", ["archived_page_id"], ["id"]
    )
    op.drop_column("holds_position", "is_extracted")
    op.add_column("properties", sa.Column("archived_page_id", sa.UUID(), nullable=True))
    op.create_foreign_key(
        None, "properties", "archived_pages", ["archived_page_id"], ["id"]
    )
    op.drop_column("properties", "is_extracted")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "properties",
        sa.Column("is_extracted", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "properties", type_="foreignkey")
    op.drop_column("properties", "archived_page_id")
    op.add_column(
        "holds_position",
        sa.Column("is_extracted", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "holds_position", type_="foreignkey")
    op.drop_column("holds_position", "archived_page_id")
    op.add_column(
        "born_at",
        sa.Column("is_extracted", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "born_at", type_="foreignkey")
    op.drop_column("born_at", "archived_page_id")
    op.drop_index(op.f("ix_archived_pages_content_hash"), table_name="archived_pages")
    op.drop_table("archived_pages")
    # ### end Alembic commands ###
