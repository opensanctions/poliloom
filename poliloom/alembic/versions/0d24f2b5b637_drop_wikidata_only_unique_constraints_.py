"""Drop wikidata_only unique constraints to support multiple statements

Revision ID: 0d24f2b5b637
Revises: c120ebe24dd2
Create Date: 2025-09-18 12:43:30.857413

"""

from typing import Sequence, Union

from alembic import op


# revision identifiers, used by Alembic.
revision: str = "0d24f2b5b637"
down_revision: Union[str, None] = "c120ebe24dd2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("uq_born_at_wikidata_only"),
        table_name="born_at",
        postgresql_where="(archived_page_id IS NULL)",
    )
    op.drop_index(
        op.f("uq_holds_position_wikidata_only"),
        table_name="holds_position",
        postgresql_where="(archived_page_id IS NULL)",
    )
    op.drop_index(
        op.f("uq_property_wikidata_only"),
        table_name="properties",
        postgresql_where="(archived_page_id IS NULL)",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(
        op.f("uq_property_wikidata_only"),
        "properties",
        ["politician_id", "type"],
        unique=True,
        postgresql_where="(archived_page_id IS NULL)",
    )
    op.create_index(
        op.f("uq_holds_position_wikidata_only"),
        "holds_position",
        ["politician_id", "position_id", "start_date", "end_date"],
        unique=True,
        postgresql_where="(archived_page_id IS NULL)",
    )
    op.create_index(
        op.f("uq_born_at_wikidata_only"),
        "born_at",
        ["politician_id", "location_id"],
        unique=True,
        postgresql_where="(archived_page_id IS NULL)",
    )
    # ### end Alembic commands ###
