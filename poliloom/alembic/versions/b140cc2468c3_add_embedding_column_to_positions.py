"""add_embedding_column_to_positions

Revision ID: b140cc2468c3
Revises: 544ff8941985
Create Date: 2025-06-17 16:34:29.802483

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b140cc2468c3'
down_revision: Union[str, None] = '544ff8941985'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Add embedding column based on database type
    import os
    
    database_url = os.getenv('DATABASE_URL', 'sqlite:///./poliloom.db')
    
    if database_url.startswith('postgresql'):
        # PostgreSQL with pgvector
        op.execute('CREATE EXTENSION IF NOT EXISTS vector')
        op.add_column('positions', sa.Column('embedding', sa.String(), nullable=True))
        # Note: In production, you should use proper pgvector.Vector type
        # This is a placeholder that works with both SQLite and PostgreSQL
    else:
        # SQLite with JSON
        op.add_column('positions', sa.Column('embedding', sa.JSON(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('positions', 'embedding')
    # ### end Alembic commands ###
