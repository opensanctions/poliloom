"""Remove Language and OfficialLanguage models - use WikidataRelation instead

Revision ID: 7eeea3e00d48
Revises: efac383f80e8
Create Date: 2025-09-17 16:31:47.674957

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "7eeea3e00d48"
down_revision: Union[str, None] = "efac383f80e8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("official_languages")
    op.drop_table("languages")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "official_languages",
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("country_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("language_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["countries.wikidata_id"],
            name=op.f("official_languages_country_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["language_id"],
            ["languages.wikidata_id"],
            name=op.f("official_languages_language_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("official_languages_pkey")),
        sa.UniqueConstraint(
            "country_id",
            "language_id",
            name=op.f("uq_country_language"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.create_table(
        "languages",
        sa.Column("wikidata_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["wikidata_id"],
            ["wikidata_entities.wikidata_id"],
            name=op.f("languages_wikidata_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("wikidata_id", name=op.f("languages_pkey")),
    )
    # ### end Alembic commands ###
