"""add_new_check_property_fields_constraint_with_value_precision

Revision ID: 2ed06e26f119
Revises: 9a6aba6300db
Create Date: 2025-10-08 17:23:14.166035

"""

from typing import Sequence, Union

from alembic import op


# revision identifiers, used by Alembic.
revision: str = "2ed06e26f119"
down_revision: Union[str, None] = "9a6aba6300db"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("idx_wikidata_relations_composite"),
        table_name="wikidata_relations",
        if_exists=True,
    )
    op.drop_index(
        op.f("idx_wikidata_relations_parent_entity_id"),
        table_name="wikidata_relations",
        if_exists=True,
    )
    op.drop_index(
        op.f("idx_wikidata_relations_relation_type"),
        table_name="wikidata_relations",
        if_exists=True,
    )
    # ### end Alembic commands ###

    # Add new constraint that includes value_precision IS NOT NULL for date properties
    op.execute(
        """
        ALTER TABLE properties ADD CONSTRAINT check_property_fields
        CHECK (
            (type IN ('BIRTH_DATE', 'DEATH_DATE') AND value IS NOT NULL AND value_precision IS NOT NULL AND entity_id IS NULL)
            OR
            (type IN ('BIRTHPLACE', 'POSITION', 'CITIZENSHIP') AND entity_id IS NOT NULL AND value IS NULL)
        );
        """
    )


def downgrade() -> None:
    """Downgrade schema."""
    # Drop the new constraint
    op.drop_constraint("check_property_fields", "properties", type_="check")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(
        op.f("idx_wikidata_relations_relation_type"),
        "wikidata_relations",
        ["relation_type"],
        unique=False,
    )
    op.create_index(
        op.f("idx_wikidata_relations_parent_entity_id"),
        "wikidata_relations",
        ["parent_entity_id"],
        unique=False,
    )
    op.create_index(
        op.f("idx_wikidata_relations_composite"),
        "wikidata_relations",
        ["child_entity_id", "parent_entity_id", "relation_type"],
        unique=False,
    )
    # ### end Alembic commands ###
