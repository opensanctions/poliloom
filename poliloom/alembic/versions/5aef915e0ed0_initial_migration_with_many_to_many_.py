"""Initial migration with many-to-many class relationships

Revision ID: 5aef915e0ed0
Revises:
Create Date: 2025-08-29 09:28:02.511370

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision: str = "5aef915e0ed0"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "archived_pages",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("content_hash", sa.String(), nullable=False),
        sa.Column("fetch_timestamp", sa.DateTime(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_archived_pages_content_hash"),
        "archived_pages",
        ["content_hash"],
        unique=False,
    )
    op.create_table(
        "countries",
        sa.Column("wikidata_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("iso_code", sa.String(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("wikidata_id"),
    )
    op.create_index(
        op.f("ix_countries_iso_code"), "countries", ["iso_code"], unique=True
    )
    op.create_table(
        "locations",
        sa.Column("wikidata_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "embedding", pgvector.sqlalchemy.vector.VECTOR(dim=384), nullable=True
        ),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("wikidata_id"),
    )
    op.create_table(
        "politicians",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("wikidata_id", sa.String(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_politicians_wikidata_id"), "politicians", ["wikidata_id"], unique=True
    )
    op.create_table(
        "positions",
        sa.Column("wikidata_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "embedding", pgvector.sqlalchemy.vector.VECTOR(dim=384), nullable=True
        ),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("wikidata_id"),
    )
    op.create_table(
        "wikidata_classes",
        sa.Column("wikidata_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("wikidata_id"),
    )
    op.create_table(
        "born_at",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("politician_id", sa.UUID(), nullable=False),
        sa.Column("location_id", sa.String(), nullable=False),
        sa.Column("archived_page_id", sa.UUID(), nullable=True),
        sa.Column("proof_line", sa.String(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["archived_page_id"],
            ["archived_pages.id"],
        ),
        sa.ForeignKeyConstraint(
            ["location_id"],
            ["locations.wikidata_id"],
        ),
        sa.ForeignKeyConstraint(
            ["politician_id"],
            ["politicians.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "has_citizenship",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("politician_id", sa.UUID(), nullable=False),
        sa.Column("country_id", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["countries.wikidata_id"],
        ),
        sa.ForeignKeyConstraint(
            ["politician_id"],
            ["politicians.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "holds_position",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("politician_id", sa.UUID(), nullable=False),
        sa.Column("position_id", sa.String(), nullable=False),
        sa.Column("start_date", sa.String(), nullable=True),
        sa.Column("start_date_precision", sa.Integer(), nullable=True),
        sa.Column("end_date", sa.String(), nullable=True),
        sa.Column("end_date_precision", sa.Integer(), nullable=True),
        sa.Column("archived_page_id", sa.UUID(), nullable=True),
        sa.Column("proof_line", sa.String(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["archived_page_id"],
            ["archived_pages.id"],
        ),
        sa.ForeignKeyConstraint(
            ["politician_id"],
            ["politicians.id"],
        ),
        sa.ForeignKeyConstraint(
            ["position_id"],
            ["positions.wikidata_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "location_classes",
        sa.Column("location_id", sa.String(), nullable=False),
        sa.Column("class_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["wikidata_classes.wikidata_id"],
        ),
        sa.ForeignKeyConstraint(
            ["location_id"],
            ["locations.wikidata_id"],
        ),
        sa.PrimaryKeyConstraint("location_id", "class_id"),
    )
    op.create_table(
        "position_classes",
        sa.Column("position_id", sa.String(), nullable=False),
        sa.Column("class_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["wikidata_classes.wikidata_id"],
        ),
        sa.ForeignKeyConstraint(
            ["position_id"],
            ["positions.wikidata_id"],
        ),
        sa.PrimaryKeyConstraint("position_id", "class_id"),
    )
    op.create_table(
        "properties",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("politician_id", sa.UUID(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("value_precision", sa.Integer(), nullable=True),
        sa.Column("archived_page_id", sa.UUID(), nullable=True),
        sa.Column("proof_line", sa.String(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["archived_page_id"],
            ["archived_pages.id"],
        ),
        sa.ForeignKeyConstraint(
            ["politician_id"],
            ["politicians.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "politician_id", "type", name="uq_properties_politician_type"
        ),
    )
    op.create_table(
        "subclass_relations",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("parent_class_id", sa.String(), nullable=False),
        sa.Column("child_class_id", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["child_class_id"],
            ["wikidata_classes.wikidata_id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_class_id"],
            ["wikidata_classes.wikidata_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "parent_class_id", "child_class_id", name="uq_subclass_parent_child"
        ),
    )
    op.create_index(
        op.f("ix_subclass_relations_child_class_id"),
        "subclass_relations",
        ["child_class_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_subclass_relations_parent_class_id"),
        "subclass_relations",
        ["parent_class_id"],
        unique=False,
    )
    op.create_table(
        "wikipedia_links",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("politician_id", sa.UUID(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("language_code", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["politician_id"],
            ["politicians.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "birthplace_evaluations",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("is_confirmed", sa.Boolean(), nullable=False),
        sa.Column("born_at_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["born_at_id"],
            ["born_at.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "position_evaluations",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("is_confirmed", sa.Boolean(), nullable=False),
        sa.Column("holds_position_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["holds_position_id"],
            ["holds_position.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "property_evaluations",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("is_confirmed", sa.Boolean(), nullable=False),
        sa.Column("property_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["property_id"],
            ["properties.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("property_evaluations")
    op.drop_table("position_evaluations")
    op.drop_table("birthplace_evaluations")
    op.drop_table("wikipedia_links")
    op.drop_index(
        op.f("ix_subclass_relations_parent_class_id"), table_name="subclass_relations"
    )
    op.drop_index(
        op.f("ix_subclass_relations_child_class_id"), table_name="subclass_relations"
    )
    op.drop_table("subclass_relations")
    op.drop_table("properties")
    op.drop_table("position_classes")
    op.drop_table("location_classes")
    op.drop_table("holds_position")
    op.drop_table("has_citizenship")
    op.drop_table("born_at")
    op.drop_table("wikidata_classes")
    op.drop_table("positions")
    op.drop_index(op.f("ix_politicians_wikidata_id"), table_name="politicians")
    op.drop_table("politicians")
    op.drop_table("locations")
    op.drop_index(op.f("ix_countries_iso_code"), table_name="countries")
    op.drop_table("countries")
    op.drop_index(op.f("ix_archived_pages_content_hash"), table_name="archived_pages")
    op.drop_table("archived_pages")
    # ### end Alembic commands ###
