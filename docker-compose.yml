services:
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: poliloom
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres_test:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: poliloom_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-migrate:
    image: ghcr.io/opensanctions/poliloom:${API_IMAGE_TAG:-latest}
    build:
      context: ./poliloom
      dockerfile: Dockerfile
    env_file:
      - ./poliloom/.env
    environment:
      - PYTHONPATH=/app
    command: alembic upgrade head
    profiles:
      - production
      - init

  api:
    image: ghcr.io/opensanctions/poliloom:${API_IMAGE_TAG:-latest}
    build:
      context: ./poliloom
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./poliloom/.env
    environment:
      - PYTHONPATH=/app
      - PORT=8000
      - HF_HOME=/var/cache/huggingface
      - CRAWL4AI_CACHE_DIR=/var/cache/crawl4ai
    volumes:
      - huggingface_cache:/var/cache/huggingface
      - crawl4ai_cache:/var/cache/crawl4ai
      - wikidata_cache:/var/cache/wikidata
    depends_on:
      db-migrate:
        condition: service_completed_successfully
    profiles:
      - production

  gui:
    image: ghcr.io/opensanctions/poliloom-gui:${GUI_IMAGE_TAG:-latest}
    build:
      context: ./poliloom-gui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./poliloom-gui/.env.local
    environment:
      - AUTH_TRUST_HOST=true
      - PORT=3000
    depends_on:
      - api
    profiles:
      - production

volumes:
  postgres_data:
  postgres_test_data:
  huggingface_cache:
  crawl4ai_cache:
  wikidata_cache:
